Package online book store ; 
import javax.swing.*; public class Main {
Public static void main(String[]args){
//Run the Online Book store App in the Swing event dispatch thread Swing Utilities.invokeLater(() -> {
Online Book store App book store App=new Online Book store  App(); 
bookstoreApp.set Visible(true);
// Display the app window
});
}
}
 
Online Book store App Class
Package online book store; import javax.swing.; import java.awt.;
import  java.awt.event.*; import java.util.Array List; import java.util.List;
public class Online Book store App extends J Frame{ private List<String> books;
private Array List<String> cart; private Card Layout card Layout; private J Panel card Panel; private J List<String> bookList;
private Default List Model<String>list Model; private J Text Area cart Area;
private J Text Field search Field; private J Text Field user name Field;
private J Password Field password Field; private J Text Field payment Card Number Field; private J Text Field payment Expiry Date Field; private J Text Field payment CVV Field;
public Online Book store App(){ 
books = new Array List<>(); 
cart = new Array List<>();
books.add("The Great Gats by-$10"); books.add("Moby Dick - $12");
books.add("Clean Code-$25");
books.add("Introduction to Algorithms - $50");
 
books.add("Effective  Java - $35"); books.add("The Pragmatic Programmer-$30");
books.add("Design Patterns:Elements of Object-Oriented Software-$45"); books.add("Python Crash Course - $40");
books.add("Head First Java-$35");
books.add("Java Script:The Good Parts -$28"); books.add("You Don't Know JS - $22"); 
           books.add("To Kill a Mockingbird - $15");
books.add("1984 - $18"); books.add("Pride and Prejudice-$14"); books.add("The White Tiger - $15");
books.add("Chetan Bhagat-Five Point Someone-$10"); books.add("The God of Small Things - $18"); books.add("Midnight's Children - $22");
books.add("The Namesake - $17"); books.add("A Fine Balance - $19"); books.add("Shanta ram - $20"); books.add("The Inheritance of Loss-$14"); books.add("The Elephant Vanishes - $16"); books.add("Train to Pakistan - $18"); books.add("The Discovery of India - $13"); books.add("The Guide - $12"); books.add("Gitanjali - $14");
books.add("A Passage to India - $15"); // E.M. Forster books.add("The Great Indian Novel - $17"); // Shashi Tharoor books.add("The Immortals of Meluha-$16");//AmishTripathi books.add("The Secret of the Nagas - $18"); // Amish Tripathi books.add("Sacred Games - $19"); // Vikram Chandra
 
set Title("Online Bookstore");
set Size(600, 450);
set Default Close Operation(J Frame.EXIT_ON_CLOSE); 
set Location Relative To(null);
card Layout = new Card Layout();
 card Panel=new J Panel(card Layout);
card Panel.add(create Login Page(), "Login"); 
card Panel.add(create Book store Page(),"Bookstore");
card Panel.add(create Cart Page(), "Cart"); card Panel.add(create Checkout Page(), "Checkout"); add(card Panel);
}

//1.LoginPage
Private J Panel create Login Page(){
J Panel login Panel=new J Panel(new Grid Layout(3,2,10,10));
Login Panel.set Background(new Color(255,255,255)); Font label Font = new Font("Arial", Font.BOLD, 14); username Field = new J Text Field(20);
Password Field = new J Password Field(20); J Button login Button=new J Button("Login");
Login Button.set Background(new Color(0,122,204));                       login Button.set  Foreground(Color.WHITE);                                       login Button.add Action Listener(e -> login());

J Label username Label = new J Label("Username:"); username Label.set Font(labelFont);                          username Label.set Foreground(newColor(0,122,204));
 
J Label password Label = new J Label("Password:"); password Label.set Font(label Font); 
password Label.set Foreground(new Color(0,122,204)); login Panel.add(username Label); 
login Panel.add(username Field); 
login Panel.add(password Label); 
login Panel.add(password Field); 
login Panel.add(login Button);
login Panel.set Layout(new Grid Bag Layout()); 
Grid Bag Constraints gbc=new Grid BagConstraints(); gbc.insets = new Insets(5, 5, 5, 5);
gbc.gridx=0;
gbc.gridy = 0; 
login Panel.add(username Label, gbc); gbc.gridx = 1; 
login Panel.add(username Field, gbc); gbc.gridx = 0;
gbc.gridy = 1; 
login Panel.add(password Label, gbc); gbc.gridx = 1; 
login Panel.add(password Field, gbc); gbc.gridx = 0;
gbc.gridy=2;
gbc.gridwidth=2;
gbc.fill=Grid Bag Constraints.HORIZONTAL;
login Panel.add(login Button, gbc);
return login Panel;
}
 
Private void login() {
String user name=user name Field.get Text();
String password=new String(password Field.get Password());

if(username.equals("AkashS")&&password.equals("am23004")){
 card Layout.show(card Panel, "Bookstore");
}else{
J Option Pane.showMessage Dialog(this,	"Invalid	credentials.	Please	try again.");
}
}


//2.BookstorePage(Search&DisplayBooks)
Private  J Panel create Book store Page() { 
    J Panel book store Panel=new J Panel();
Book store Panel.set Layout(new Border Layout()); bookstorePanel.setBackground(newColor(240,248,255));//Lightbackground

searchField = new J Text Field(20); 
searchField.set Font(new Font("Arial",Font.PLAIN,14));
J Button searchButton = new J Button("Search"); searchButton.set Background(new Color(0, 122, 204)); searchButton.set Foreground(Color.WHITE);

List Model=new Default List Model<>(); for (String book : books) {
List Model.add Element(book);
}
 
BookList = new J List<>(list Model); 
bookList.set Selection Mode(List Selection Model.SINGLE_SELECTION); 
J Scroll Pane list Scroll Pane = new J Scroll Pane(book List); searchButton.add Action Listener(e -> search Books());
J Panel search Panel = new J Panel();
search Panel.set Layout(new Border Layout());
search Panel.add(new J Label("Search for a book:"),Border Layout.WEST); search Panel.add(searchField, BorderLayout.CENTER); 
search Panel.add(searchButton, BorderLayout.EAST); 
book store Panel.add(searchPanel, BorderLayout.NORTH); 
book store Panel.add(list Scroll Pane, BorderLayout.CENTER);
J Button add To Cart Button = new JButton("Add to Cart"); 
addToCart Button.set Background(new Color(0, 122, 204)); addToCartButton.set Foreground(Color.WHITE); addToCartButton.add Action Listener(e -> addToCart()); bookstore Panel.add(add To CartButton, BorderLayout.SOUTH); return bookstorePanel;
}
Private void search Books(){
Stringquery=search Field.getText().to LowerCase(); listModel.clear();
for(Stringbook:books){
if(book.toLowerCase().contains(query)){

listModel.add Element(book);
}
}
}
 
Private void add To Cart(){
Strings electedBook=bookList.get Selected Value(); if (selectedBook != null) {
cart.add(selectedBook); 
J Option Pane.showMessageDialog(this,"Added to cart!"); show Payment Details Dialog();
}else{
J Option Pane.showMessageDialog(this,"Please select a book to add to the
cart.");
}
}
Private void show Payment Details Dialog(){
J Panel paymentPanel=new J Panel(new Grid Layout(4,2,10,10));
Payment Panel.set Background(new Color(255, 255, 255)); Font label Font = new Font("Arial", Font.BOLD, 14); payment Card Number Field = new J Text Field(20);
payment Expiry Date Field = new J Text Field(10); 
payment CVVField = new JTextField(4); paymentPanel.add(new JLabel("Card Number:"));
 payment Panel.add(paymentCardNumberField);
 payment Panel.add(newJLabel("ExpiryDate(MM/YY):")); payment Panel.add(paymentExpiryDateField);
 payment Panel.add(new JLabel("CVV:"));
 payment Panel.add(paymentCVVField);
int option = J Option Pane.show Confirm Dialog(this, payment Panel, 
"Enter     Payment Details", J Option Pane.OK_CANCEL_OPTION,
 J Option Pane.PLAIN_MESSAGE);
if(option==J Option Pane.OK_OPTION){
 
Stringcard Number=payment Card Number Field.get Text(); String expiry Date = payment Expiry Date Field.get Text(); String cvv = payment CVV Field.get Text();

if (cardNumber.isEmpty() || expiryDate.isEmpty() || cvv.isEmpty()) {
 J Option Pane.show Message Dialog(this,"Please enter	all payment details.");
}else{
J Option Pane.show Message Dialog(this,"Payment Successful.Proceeding to checkout.");
Card Layout.show(cardPanel,"Cart");//Showcartafterpayment
}
}
}
//3.CartPage
Private J Panelcreate Cart Page(){
J PanelcartPanel=new J Panel(newBorderLayout()); 
cartPanel.set Background(newColor(240,248,255));

cartArea=newJTextArea(10,30); cartArea.setEditable(false);
JScrollPanecartScrollPane=newJScrollPane(cartArea);

JButton checkoutButton = new JButton("Proceed to Checkout"); checkoutButton.setBackground(new Color(0, 122, 204)); checkoutButton.setForeground(Color.WHITE); checkoutButton.addActionListener(e->cardLayout.show(cardPanel,
"Checkout"));
 
cartPanel.add(newJLabel("YourCart:"),BorderLayout.NORTH); cartPanel.add(cartScrollPane, BorderLayout.CENTER); cartPanel.add(checkoutButton, BorderLayout.SOUTH);
returncartPanel;
}


//UpdateCartDisplay
privatevoidupdateCartDisplay(){ cartArea.setText("");
for (String item : cart) { cartArea.append(item+"\n");
}
}
//4.CheckoutPage(PaymentProcess)
privateJPanelcreateCheckoutPage(){
JPanelcheckoutPanel=newJPanel(newBorderLayout()); checkoutPanel.setBackground(newColor(240,248,255)); JTextArea orderSummary = new JTextArea(10, 30); orderSummary.setEditable(false);
JScrollPane orderScrollPane = new JScrollPane(orderSummary); JButton placeOrderButton = new JButton("Place Order"); placeOrderButton.setBackground(new Color(0, 122, 204)); placeOrderButton.setForeground(Color.WHITE); placeOrderButton.addActionListener(e->placeOrder(orderSummary));
checkoutPanel.add(new	JLabel("Checkout	-	Order	Summary:"), BorderLayout.NORTH);
checkoutPanel.add(orderScrollPane, BorderLayout.CENTER); checkoutPanel.add(placeOrderButton, BorderLayout.SOUTH);
 
returncheckoutPanel;
}

privatevoidplaceOrder(JTextAreaorderSummary){
StringBuilderreceipt=newStringBuilder("OrderSummary:\n\n"); double total = 0;
for (String item : cart) { receipt.append(item).append("\n"); total += extractPrice(item);
}
receipt.append("\nTotal: $").append(total); orderSummary.setText(receipt.toString());

intoption =JOptionPane.showConfirmDialog(this,"Proceedwith payment?", "Payment", JOptionPane.YES_NO_OPTION);
if(option==JOptionPane.YES_OPTION){
JOptionPane.showMessageDialog(this, "Payment Successful. Thank you for your purchase!");
cart.clear(); updateCartDisplay();
cardLayout.show(cardPanel,"Login");
}
}
privatedoubleextractPrice(StringbookDetails){ String[] parts = bookDetails.split(" - \\$"); return Double.parseDouble(parts[1]);
}